# Simple colcon build and deploy
version: 2.1

orbs: 
  aws-s3: circleci/aws-s3@3.0.0
  colcon_build-orb: cmrobotics/colcon_build-orb@0.2.0
  openvpn3: versatile/openvpn3@1.0.19

workflows:
  build, test and create:
    jobs:
      - build-test:
          filters:
            tags:
              ignore: /^[0-9]+\.[0-9]+\.[0-9]+$/
          context:
            - ROS Pipelines
            - OpenVPN
      - create:
          requires:
            - build-test
          context:
            - ROS Pipelines
            - OpenVPN
  build, test, create and deploy:
    jobs:
      - build-test:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^[0-9]+\.[0-9]+\.[0-9]+$/
          context:
            - ROS Pipelines
            - OpenVPN
      - create:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^[0-9]+\.[0-9]+\.[0-9]+$/
          requires:
            - build-test
          context:
            - ROS Pipelines
            - OpenVPN
      - deploy:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^[0-9]+\.[0-9]+\.[0-9]+$/
          requires:
            - build-test
            - create
          context:
            - AWS ECR Access

executors:
  simple-machine:
    machine: 
      image: ubuntu-2004:202111-02
    working_directory: ~/workspace/src/cmr_tests_utils 
  simple-docker:
    docker:
      - image: osrf/ros:galactic-desktop-focal
    working_directory: ~/workspace/src/cmr_tests_utils 
jobs:
  build-test:
    executor: simple-machine
    steps:
      - checkout:
          path: ~/workspace/src/$CIRCLE_PROJECT_REPONAME
      - openvpn3/install
      - openvpn3/connect:
        config: VPN_CLIENT_CONFIG
      - openvpn3/check
      - colcon_build-orb/docker_run:
          rosdistro_url: ROSDISTRO_INDEX_URL
          github_token: GITHUB_TOKEN
          circle_project_repo: CIRCLE_PROJECT_REPONAME
          workspace_volume: /home/circleci/workspace:/root/workspace
      - colcon_build-orb/colcon_build
      - openvpn3/disconnect
      - persist_to_workspace:
          root: ../..
          paths: 
            - .
  create:
    executor: simple-machine
    steps: 
      - attach_workspace:
          at: ~/workspace
      - openvpn3/install
      - openvpn3/connect:
        config: VPN_CLIENT_CONFIG
      - openvpn3/check
      - colcon_build-orb/docker_run:
          rosdistro_url: ROSDISTRO_INDEX_URL
          github_token: GITHUB_TOKEN
          circle_project_repo: CIRCLE_PROJECT_REPONAME
          workspace_volume: /home/circleci/workspace:/root/workspace
      - colcon_build-orb/binarize
      - openvpn3/disconnect
      - store_artifacts:
          path: ~/workspace/src/ros-galactic-cmr_tests_utils.deb 
      - persist_to_workspace:
          root: ~/workspace
          paths: 
            - src/ros-galactic-cmr_tests_utils.deb 
  deploy:
    executor: simple-docker
    steps:
      - attach_workspace:
          at: ~/workspace
      - run:
          name: Renaming with tag name
          command: mv ~/workspace/src/ros-galactic-$CIRCLE_PROJECT_REPONAME.deb ~/workspace/src/ros-galactic-$CIRCLE_PROJECT_REPONAME-$CIRCLE_TAG.deb
      - run:
          name: Install unzip
          command: apt update && apt install -y unzip
      - aws-s3/copy:
          arguments: |
            --acl private 
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-region: AWS_REGION
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          from: ~/workspace/src/ros-galactic-$CIRCLE_PROJECT_REPONAME-$CIRCLE_TAG.deb
          to: 's3://aptly-debian-files/ros-galactic-$CIRCLE_PROJECT_REPONAME.deb'
